library(data.table)
library(data.table)
?readMM
library(data.table)
library(data.table)
df = fread("~/Downloads/Ts21_reference_scArches_Healthy_Liver_metadata.csv",data.table = F,stringsAsFactors = F)
head(df)
dim(df)
table(df$Predicted)
table(subset(df,Predicted=="Cycling HSCs/MPPs")$cell_type)
library(data.table)
df = fread("~/Downloads/data_snv",data.table = F,stringsAsFactors = F)
df$id = paste0(substring(df[,1],4),":",df[,3],"-",df[,3])
# cadd = fread("~/Downloads/GRCh38-v1.6_anno_93838d79e66aa5890c99fc20b97e0052.tsv.gz",data.table = F,stringsAsFactors = F)
vep = fread("~/Downloads/mri1f1Kk5dKTZ0HU.txt",data.table = F,stringsAsFactors = F)
vep = vep[!duplicated(vep$Location),]
df2 = merge(df,vep[,c("Location","Consequence","SYMBOL")],by.y="Location",by.x="id")
sum(!(vep$Location %in% df$id))
sum(!(df$id %in% vep$Location))
tab = aggregate(id~V5+Consequence,data=df2,length)#,by=df2[,c("V5","Consequence")],length)
tab$prop = NA
i<-tab$V5=="D21"; tab[i,"prop"] = tab[i,3] / sum(tab[i,3])
i<-tab$V5=="T21"; tab[i,"prop"] = tab[i,3] / sum(tab[i,3])
library(data.table)
disease_status="DownSyndrome"
pseudobulk_covariate="sample"
suffix=""
f = paste0("~/Documents/Research/t21-proj/out/full/pseudobulks/",pseudobulk_covariate,"/DE/",disease_status,'_',"cyc_vs_hsc",".de",suffix,".txt")
atac=fread(f,data.table = F,stringsAsFactors = F)[,1:7]
cre = fread("~/Downloads/GRCh38-cCREs.bed",data.table=F,stringsAsFactors = F)
# cre = fread("/oak/stanford/groups/smontgom/amarder/data/ENCFF394DBM.bed",data.table=F,stringsAsFactors = F)
colnames(cre)[1:3] = c("chrom",'start','end')
df2 = df2[,c(2:4,1,5:ncol(df2))]
colnames(df2)[1:3] = c("chrom",'start','end')
tmp = as.data.frame(valr::bed_intersect(cre,df2))
df2$cre = (df2$id %in% tmp$id.y)
df3 = merge(df2,atac,by.x="SYMBOL",by.y="names",all.x = TRUE)
df3.sub = df3[grepl("intron",df3$Consequence) & !is.na(df3$SYMBOL) & df3$V5=="T21",]
df3.sub = df3[grepl("intron|interg",df3$Consequence) & !is.na(df3$SYMBOL) & !is.na(df3$logFC) & df3$V5!="T21_MyeloidPreleuk",]
# df3.sub = df3[df3$Consequence %in% c("intron_variant","intron_variant,non_coding_transcript_variant") & df3$V5!="T21_MyeloidPreleuk",]
df3.sub = df3[df3$Consequence %in% c("intron_variant","intron_variant,non_coding_transcript_variant") & !is.na(df3$logFC) & df3$V5!="T21_MyeloidPreleuk",]
i <- df3.sub$V5=="T21"
tmp1 = df3.sub[i,]
tmp2 <- df3.sub[!i,]
binom.test(sum(tmp1$cre),nrow(tmp1),sum(tmp2$cre)/nrow(tmp2))
pvec = c()
for (j in 1:10000) {
# i = sample(1:nrow(tmp1),nrow(tmp1),replace = T)
# tmp1.boot = tmp1[i,]
# p = sum(tmp1.boot$cre)/nrow(tmp1.boot)
# pvec = c(pvec,p)
i = sample(1:nrow(tmp2),nrow(tmp2),replace = T)
tmp2.boot = tmp2[i,]
p = sum(tmp2.boot$cre)/nrow(tmp2.boot)
pvec = c(pvec,p)
}
library(ggplot2)
g=ggplot(data.frame(pvec),aes(x=pvec)) + geom_histogram(fill='darkblue',col='white',bins=16) +
# theme_bw() +
ggpubr::theme_pubr() +
theme(panel.grid = element_blank(),plot.title = element_text(hjust=0.5)) +
geom_vline(aes(xintercept = sum(tmp1$cre)/nrow(tmp1),color='Down Syndrome'),lty='dashed',lwd=2) +
geom_vline(aes(xintercept = sum(tmp2$cre)/nrow(tmp2),color='Disomic'),lty='dashed',lwd=2) +
labs(x="Empirical bootstrap distribution in disomic somatics",
title="Percentage of intronic SNVs in DS HSC-expressed genes that overlap CREs",
y='Count') +
scale_color_manual(name = "Observed external somatic set", values = c(`Down Syndrome` = "yellow3", Disomic = "orange"))
g
library(data.table)
df = fread("~/Downloads/data_snv",data.table = F,stringsAsFactors = F)
df$id = paste0(substring(df[,1],4),":",df[,3],"-",df[,3])
# cadd = fread("~/Downloads/GRCh38-v1.6_anno_93838d79e66aa5890c99fc20b97e0052.tsv.gz",data.table = F,stringsAsFactors = F)
vep = fread("~/Downloads/mri1f1Kk5dKTZ0HU.txt",data.table = F,stringsAsFactors = F)
vep = vep[!duplicated(vep$Location),]
df2 = merge(df,vep[,c("Location","Consequence","SYMBOL")],by.y="Location",by.x="id")
sum(!(vep$Location %in% df$id))
sum(!(df$id %in% vep$Location))
head(df2)
dim(df2)
tab = aggregate(id~V5+Consequence,data=df2,length)#,by=df2[,c("V5","Consequence")],length)
tab$prop = NA
i<-tab$V5=="D21"; tab[i,"prop"] = tab[i,3] / sum(tab[i,3])
i<-tab$V5=="T21"; tab[i,"prop"] = tab[i,3] / sum(tab[i,3])
head(tab)
head(df2)
library(data.table)
disease_status="DownSyndrome"
pseudobulk_covariate="sample"
suffix=""
f = paste0("~/Documents/Research/t21-proj/out/full/pseudobulks/",pseudobulk_covariate,"/DE/",disease_status,'_',"cyc_vs_hsc",".de",suffix,".txt")
atac=fread(f,data.table = F,stringsAsFactors = F)[,1:7]
cre = fread("~/Downloads/GRCh38-cCREs.bed",data.table=F,stringsAsFactors = F)
# cre = fread("/oak/stanford/groups/smontgom/amarder/data/ENCFF394DBM.bed",data.table=F,stringsAsFactors = F)
colnames(cre)[1:3] = c("chrom",'start','end')
df2 = df2[,c(2:4,1,5:ncol(df2))]
colnames(df2)[1:3] = c("chrom",'start','end')
tmp = as.data.frame(valr::bed_intersect(cre,df2))
df2$cre = (df2$id %in% tmp$id.y)
dim(df2)
head(df2)
table(df2$Consequence,df2$cre)
?bed_intersect
library(data.table)
traitName="wbc"; res = list()
for(traitName in c("rbc","wbc","lymph")) {
f = paste0("~/Documents/Research/t21_multiome/output/scavenge/",traitName,".txt")
df = fread(f,data.table = F,stringsAsFactors = F)
df$trs_ex = df$TRS > quantile(df$TRS,probs=0.9)
df$trs_ex = ifelse(df$trs_ex,"GWAS-enriched HSCs","Other HSCs")
lineage = fread("~/Downloads/Lineage_Probabilities_per_Cell.csv",data.table = F,stringsAsFactors = F)
mapping = fread("~/Downloads/dataset_metadata_to_cell.csv",data.table = F,stringsAsFactors = F,header=T)
which(lineage$V1!=mapping$V1)
lineage = cbind(mapping,lineage[,-1])
lineage$cell = unlist(lapply(strsplit(lineage$V1,"_"),function(x) x[1]))
df2 = subset(df,subclust_v6=="HSCs")
df.mg = merge(df2,lineage,by=c("cell","dataset"),all=T)
df.mg$lin = apply(df.mg[,paste0("Lineage_",c(1:3),"_prob")],1,which.max)
aggregate(TRS~lin,df.mg,median)
tmp = aggregate(TRS~lin+dataset,df.mg,sum)
tmp2 = aggregate(TRS~lin+dataset,df.mg,length)
tmp = merge(tmp,tmp2,by=1:2)
tmp$lin = as.factor(tmp$lin)
contrasts(tmp$lin)
# Fit the ANCOVA model
tmp$lin1=tmp$lin=="1"
tmp$lin2=tmp$lin=="2"
tmp$lin3=tmp$lin=="3"
mod <- lm(TRS.x ~ lin1 + TRS.y, data = tmp)
x=summary(mod)$coef[2,4]
mod <- lm(TRS.x ~ lin2 + TRS.y, data = tmp)
y=summary(mod)$coef[2,4]
mod <- lm(TRS.x ~ lin3 + TRS.y, data = tmp)
z=summary(mod)$coef[2,4]
res[[traitName]] = data.frame(x,y,z)
}
library(data.table)
traitName="wbc"; res = list()
library(data.table)
traitName="wbc"; res = list()
for(traitName in c("rbc","wbc","lymph")) {
f = paste0("~/Documents/Research/t21_multiome/output/scavenge/",traitName,".txt")
df = fread(f,data.table = F,stringsAsFactors = F)
df$trs_ex = df$TRS > quantile(df$TRS,probs=0.9)
df$trs_ex = ifelse(df$trs_ex,"GWAS-enriched HSCs","Other HSCs")
lineage = fread("~/Downloads/Lineage_Probabilities_per_Cell.csv",data.table = F,stringsAsFactors = F)
mapping = fread("~/Downloads/dataset_metadata_to_cell.csv",data.table = F,stringsAsFactors = F,header=T)
which(lineage$V1!=mapping$V1)
lineage = cbind(mapping,lineage[,-1])
lineage$cell = unlist(lapply(strsplit(lineage$V1,"_"),function(x) x[1]))
df2 = subset(df,subclust_v6=="HSCs")
df.mg = merge(df2,lineage,by=c("cell","dataset"),all=T)
df.mg$lin = apply(df.mg[,paste0("Lineage_",c(1:3),"_prob")],1,which.max)
aggregate(TRS~lin,df.mg,median)
tmp = aggregate(TRS~lin+dataset,df.mg,sum)
tmp2 = aggregate(TRS~lin+dataset,df.mg,length)
tmp = merge(tmp,tmp2,by=1:2)
tmp$lin = as.factor(tmp$lin)
contrasts(tmp$lin)
# Fit the ANCOVA model
tmp$lin1=tmp$lin=="1"
tmp$lin2=tmp$lin=="2"
tmp$lin3=tmp$lin=="3"
mod <- lm(TRS.x ~ lin1 + TRS.y, data = tmp)
x=summary(mod)$coef[2,4]
mod <- lm(TRS.x ~ lin2 + TRS.y, data = tmp)
y=summary(mod)$coef[2,4]
mod <- lm(TRS.x ~ lin3 + TRS.y, data = tmp)
z=summary(mod)$coef[2,4]
res[[traitName]] = data.frame(x,y,z)
}
res.df=melt(do.call(rbind,res))
res.df$fdr = p.adjust(res.df$value,method='fdr')
res.df
res.df
res
###################
library(data.table)
traitName="wbc"; res = list()
for(traitName in c("rbc","wbc","lymph")) {
f = paste0("~/Documents/Research/t21_multiome/output/scavenge/",traitName,".txt")
df = fread(f,data.table = F,stringsAsFactors = F)
df$trs_ex = df$TRS > quantile(df$TRS,probs=0.9)
df$trs_ex = ifelse(df$trs_ex,"GWAS-enriched HSCs","Other HSCs")
lineage = fread("~/Downloads/Lineage_Probabilities_per_Cell.csv",data.table = F,stringsAsFactors = F)
mapping = fread("~/Downloads/dataset_metadata_to_cell.csv",data.table = F,stringsAsFactors = F,header=T)
which(lineage$V1!=mapping$V1)
lineage = cbind(mapping,lineage[,-1])
lineage$cell = unlist(lapply(strsplit(lineage$V1,"_"),function(x) x[1]))
df2 = subset(df,subclust_v6=="HSCs")
df.mg = merge(df2,lineage,by=c("cell","dataset"),all=T)
df.mg$lin = apply(df.mg[,paste0("Lineage_",c(1:3),"_prob")],1,which.max)
aggregate(TRS~lin,df.mg,median)
tmp = aggregate(TRS~lin+dataset,df.mg,sum)
tmp2 = aggregate(TRS~lin+dataset,df.mg,length)
tmp = merge(tmp,tmp2,by=1:2)
tmp$lin = as.factor(tmp$lin)
contrasts(tmp$lin)
# Fit the ANCOVA model
tmp$lin1=tmp$lin=="1"
tmp$lin2=tmp$lin=="2"
tmp$lin3=tmp$lin=="3"
mod <- lm(TRS.x ~ lin1 + TRS.y, data = tmp)
x=summary(mod)$coef[2,4]
mod <- lm(TRS.x ~ lin2 + TRS.y, data = tmp)
y=summary(mod)$coef[2,4]
mod <- lm(TRS.x ~ lin3 + TRS.y, data = tmp)
z=summary(mod)$coef[2,4]
res[[traitName]] = data.frame(branch1=x,branch2=y,branch3=z)
}
res.df=melt(do.call(rbind,res))
res.df$fdr = p.adjust(res.df$value,method='fdr')
res.df
for(traitName in c("rbc","wbc","lymph")) {
f = paste0("~/Documents/Research/t21_multiome/output/scavenge/",traitName,".txt")
df = fread(f,data.table = F,stringsAsFactors = F)
df$trs_ex = df$TRS > quantile(df$TRS,probs=0.9)
df$trs_ex = ifelse(df$trs_ex,"GWAS-enriched HSCs","Other HSCs")
lineage = fread("~/Downloads/Lineage_Probabilities_per_Cell.csv",data.table = F,stringsAsFactors = F)
mapping = fread("~/Downloads/dataset_metadata_to_cell.csv",data.table = F,stringsAsFactors = F,header=T)
which(lineage$V1!=mapping$V1)
lineage = cbind(mapping,lineage[,-1])
lineage$cell = unlist(lapply(strsplit(lineage$V1,"_"),function(x) x[1]))
df2 = subset(df,subclust_v6=="HSCs")
df.mg = merge(df2,lineage,by=c("cell","dataset"),all=T)
df.mg$lin = apply(df.mg[,paste0("Lineage_",c(1:3),"_prob")],1,which.max)
aggregate(TRS~lin,df.mg,median)
tmp = aggregate(TRS~lin+dataset,df.mg,sum)
tmp2 = aggregate(TRS~lin+dataset,df.mg,length)
tmp = merge(tmp,tmp2,by=1:2)
tmp$lin = as.factor(tmp$lin)
contrasts(tmp$lin)
# Fit the ANCOVA model
tmp$lin1=tmp$lin=="1"
tmp$lin2=tmp$lin=="2"
tmp$lin3=tmp$lin=="3"
mod <- lm(TRS.x ~ lin1 + TRS.y, data = tmp)
x=summary(mod)$coef[2,4]
mod <- lm(TRS.x ~ lin2 + TRS.y, data = tmp)
y=summary(mod)$coef[2,4]
mod <- lm(TRS.x ~ lin3 + TRS.y, data = tmp)
z=summary(mod)$coef[2,4]
res[[traitName]] = data.frame(trait=traitName,branch1=x,branch2=y,branch3=z)
}
res.df=melt(do.call(rbind,res))
res.df$fdr = p.adjust(res.df$value,method='fdr')
res.df
library(data.table)
df = fread("~/Documents/Research/t21_multiome/output/scent/out_split/all/HSCs.DE.txt",data.table = F,stringsAsFactors = F)
library(data.table)
df = fread("~/Documents/Research/t21_multiome/output/scent/out_split/all/HSCs.DE.txt",data.table = F,stringsAsFactors = F)
dfint = fread("~/Documents/Research/t21_multiome/output/scent/out_split/all/HSCs_all.all.txt",data.table = F,stringsAsFactors = F)
df.mg = merge(df,dfint,by = c("gene",'peak'))
df$gene_peak = paste(df$peak,df$gene)
dfint$gene_peak = paste(dfint$peak,dfint$gene)
tmp = subset(dfint,gene_peak %in% subset(df,fdr_H < 0.2 | fdr_t21 < 0.2)$gene_peak)
tmp = tmp[,c("gene_peak","beta","se","z","p","boot_basic_p","fdr")]
colnames(tmp)[-1] = paste0(colnames(tmp)[-1],"_int")
df.mg = merge(df,tmp,by="gene_peak",all.x = "TRUE")
df.mg = df.mg[order(df.mg$gene,df.mg$peak),]
f.out = paste0("~/Documents/Research/t21_multiome/output/scent/out_split/all/HSCs.DE.int.txt")
library("exact2x2")
library(data.table)
df.sub2 = fread("~/Documents/Research/t21_multiome/output/scent/out_split/all/HSCs.DE.int.txt",data.table = F,stringsAsFactors = F)
res = list()
res[[1]] = exact2x2(df.sub2$p_t21 < 0.05,df.sub2$fm,alternative = 'two.sided')
res[[2]] = exact2x2(df.sub2$fdr_t21 < 0.2,df.sub2$fm,alternative = 'two.sided')
res[[3]] = exact2x2(df.sub2$fdr_t21 < 0.1,df.sub2$fm,alternative = 'two.sided')
# res[[3]] = exact2x2(df.sub2$fdr_t21 < 0.01,df.sub2$fm,alternative = 'two.sided')
df.sub3 = subset(df.sub2,p_t21 < 0.05)
res[[4]] = exact2x2(df.sub3$adj.P.Val_lgRNA < 0.1,df.sub3$fm,alternative = 'two.sided')
table(df.sub3$P.Value_smRNA < 0.05,df.sub3$fm)
df.sub3 = subset(df.sub2,fdr_t21 < 0.2)
res[[5]] = exact2x2(df.sub3$adj.P.Val_lgRNA < 0.1,df.sub3$fm,alternative = 'two.sided')
table(df.sub3$adj.P.Val_lgRNA < 0.1,df.sub3$fm)
subset(df.sub3,adj.P.Val_lgRNA < 0.1 & fm)
df.sub3 = subset(df.sub2,fdr_t21 < 0.1)
res[[6]] = exact2x2(df.sub3$adj.P.Val_lgRNA < 0.1,df.sub3$fm,alternative = 'two.sided')
estimate=unlist(lapply(res,function(x) x$estimate))
lower=unlist(lapply(res,function(x) x$conf.int[1]))
upper=unlist(lapply(res,function(x) x$conf.int[2]))
pvalue=unlist(lapply(res,function(x) x$p.value))
res <- data.frame(estimate, lower, upper,pvalue,row.names = NULL)
res$analy = NA
res$analy[1:3] = "Active cis-regulatory region\n(in T21 HSCs)"
res$analy[4:6] = "Differential expression of target GWAS genes\n(in large scRNA-seq HSCs)"
# res$analy[1:3] = "SNPs in active cis-regulatory region\n(in T21 HSCs)"
# res$analy[4:6] = "Targets genes are differentially expressed in T21\n(in large scRNA-seq HSCs)"
res$thres = NA
res$thres[c(1,4)] = "P < 0.05"
res$thres[c(2,5)] = "FDR < 0.2"
res$thres[c(3,6)] = "FDR < 0.1"
res$analy = factor(res$analy,levels=rev(unique(res$analy)))
# levels(res$analy) = rev(unique(res$analy))
library(ggplot2)
g=ggplot(subset(res,thres!="FDR < 0.01"),aes(x=analy,y=estimate,ymin=lower,ymax=upper,col=thres)) +
scale_color_manual(values=c("Blue","Purple","DarkRed")) +
ggpubr::theme_pubr() +
theme(axis.text.x = element_text(angle=90)) +
coord_flip() +
geom_errorbar(width=0.3,position=position_dodge(width=0.5)) +
geom_point(position=position_dodge(width=0.5),size=rel(3)) +
labs(x="",y="RBC GWAS Enrichment (OR)",col="Peak-gene threshold") +
geom_hline(yintercept = 1,col='red',lty='dashed',lwd=1) +
scale_y_continuous(trans="log10");g
res
head(res)
head(df.sub2,2)
subset(df.sub2,gene=="TFR2")
subset(df.sub2,gene=="TSPAN32")
subset(df.sub2,rsid=="rs2077078")
library(data.table)
library(dplyr)
multiome_samples = c("15582 nuclei A","15582 nuclei B")
scrna_samples = c("T21 15582 B")
# multiome_samples = c("15669_A","15669_B")
# scrna_samples = c("15669H")
f="/Users/andrewmarderstein/Documents/Research/t21_multiome/output/data/Multiome.RNA_ATAC.meta.txt"
multiome = fread(f,data.table = F,stringsAsFactors = F)
annot = fread("~/Downloads/multiome_annot.csv",data.table = F,stringsAsFactors = F)
multiome = merge(multiome,annot,by="subclust_v6")
multiome.sub = subset(multiome,dataset %in% multiome_samples)
tab = aggregate(multiome.sub$subclust_v6,by=list(annot=multiome.sub$broad,disease=multiome.sub$disease,patient_sample=multiome.sub$dataset),length)
tab <- tab %>%
group_by(disease,patient_sample) %>%
mutate(prop = x / sum(x)) %>%
as.data.frame()
library(data.table)
library(dplyr)
multiome_samples = c("15582 nuclei A","15582 nuclei B")
scrna_samples = c("T21 15582 B")
# multiome_samples = c("15669_A","15669_B")
# scrna_samples = c("15669H")
f="/Users/andrewmarderstein/Documents/Research/t21_multiome/output/data/Multiome.RNA_ATAC.meta.txt"
multiome = fread(f,data.table = F,stringsAsFactors = F)
library(data.table)
f="/Users/andrewmarderstein/Documents/Research/t21_multiome/output/data/Multiome.RNA_ATAC.meta.txt"
df = fread(f,data.table = F,stringsAsFactors = F)
# fwrite(data.frame(unique(df$subclust_v6)),"~/Downloads/multiome_annot.csv",quote = F)
annot = fread("~/Downloads/multiome_annot.csv",data.table = F,stringsAsFactors = F)
df = merge(df,annot,by="subclust_v6")
tab2 = aggregate(df$subclust_v6,by=list(annot=df$broad,disease=df$disease,patient_sample=df$dataset),length)
library(dplyr)
tab2 <- tab2 %>%
group_by(disease,patient_sample) %>%
mutate(prop = x / sum(x))
tab2 = as.data.frame(tab2)
# tab2
library(ggplot2)
tab2$annot = factor(tab2$annot,levels=c("HSC/Progenitors", "Erythroid", "Mast cells", "Megakaryocytes", "B cells", "NK/T cells", "Myeloid", "Stroma"))
library(dplyr)
tab2$disease = recode(tab2$disease,"H" = "Disomic", "T21" = "Ts21")
g=ggplot(tab2,aes(x=disease,y=prop,fill=disease)) +
geom_violin() + geom_point() +
facet_grid(cols=vars(annot)) + ggpubr::theme_pubr()  +
scale_fill_brewer(palette="Set2") + guides(fill="none") +
labs(y="Cell proportions",x="Trisomy status")
pdf("~/Downloads/multiome_prop.pdf",width=13,height=6)
print(g)
dev.off()
g
